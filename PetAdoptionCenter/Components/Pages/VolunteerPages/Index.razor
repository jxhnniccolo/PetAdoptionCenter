@page "/volunteers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using PetAdoptionCenter.Domain
@using PetAdoptionCenter.Data
@implements IAsyncDisposable
@inject IDbContextFactory<PetAdoptionCenter.Data.PetAdoptionCenterContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="volunteers/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Volunteer">
    <PropertyColumn Property="volunteer => volunteer.Name" />
    <PropertyColumn Property="volunteer => volunteer.Email" />
    <PropertyColumn Property="volunteer => volunteer.PhoneNumber" />
    <PropertyColumn Property="volunteer => volunteer.Address" />
    <PropertyColumn Property="volunteer => volunteer.Status" />
    <PropertyColumn Property="volunteer => volunteer.DateCreated" />
    <PropertyColumn Property="volunteer => volunteer.DateUpdated" />
    <PropertyColumn Property="volunteer => volunteer.CreatedBy" />
    <PropertyColumn Property="volunteer => volunteer.UpdatedBy" />

    <TemplateColumn Context="volunteer">
        <a href="@($"volunteers/edit?id={volunteer.Id}")">Edit</a> |
        <a href="@($"volunteers/details?id={volunteer.Id}")">Details</a> |
        <a href="@($"volunteers/delete?id={volunteer.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private PetAdoptionCenterContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
