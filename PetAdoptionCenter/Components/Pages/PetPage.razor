@page "/petpage"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.JSInterop
@using Microsoft.EntityFrameworkCore
@using PetAdoptionCenter.Domain
@inject IDbContextFactory<PetAdoptionCenterContext> DbFactory
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JS // Inject JavaScript Runtime
<PageTitle>Pets</PageTitle>

<header class="header py-5 text-white text-center">
    <h1>🐾 Find Your Furry Friend 🐾</h1>
    <p class="lead">Discover lovable pets looking for a forever home!</p>
    <nav class="nav justify-content-center mt-3">
        <NavLink href="/" class="nav-link text-white mx-3">Home</NavLink>
        <NavLink href="/volunteerpage" class="nav-link text-white mx-3">Volunteer</NavLink>
        <NavLink href="/adoptionapplicationpage" class="nav-link text-white mx-3">Adoption Application</NavLink>
    </nav>
</header>

<section class="container my-5">
    <h3 class="text-center" style="color: #35455D;">🐶🐱 Available Pets for Adoption</h3>
    <p class="text-center" style="color: #92B1B6;">Find the perfect pet that matches your heart!</p>

    @if (isAdmin)
    {
        <div class="text-center my-4">
            <button class="btn shadow-lg rounded-pill" style="background-color: #F1C5AE; color: #35455D;" @onclick="ShowAddPetForm">➕ Add New Pet</button>
        </div>

        @if (showAddPetForm)
        {
            <div class="card p-4 shadow-lg rounded" style="background-color: #FFEFDB;">
                <h4 class="text-center mb-3" style="color: #35455D;">Add a New Pet</h4>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label class="form-label" style="color: #35455D;">Name</label>
                        <input type="text" @bind="newPet.Name" class="form-control" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label" style="color: #35455D;">Species</label>
                        <input type="text" @bind="newPet.Species" class="form-control" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label" style="color: #35455D;">Breed</label>
                        <input type="text" @bind="newPet.Breeed" class="form-control" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label" style="color: #35455D;">Age</label>
                        <input type="number" @bind="newPet.Age" class="form-control" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label class="form-label" style="color: #35455D;">Description</label>
                        <textarea @bind="newPet.Description" class="form-control"></textarea>
                    </div>
                    <div class="col-md-12 mb-3">
                        <label class="form-label" style="color: #35455D;">Image URL</label>
                        <input type="text" @bind="newPet.ImageUrl" class="form-control" />
                    </div>
                </div>
                <div class="text-center">
                    <button class="btn rounded-pill px-4 py-2" style="background-color: #92B1B6; color: white;" @onclick="AddPet">Submit</button>
                    <button class="btn btn-secondary rounded-pill px-4 py-2" @onclick="HideAddPetForm">Cancel</button>
                </div>
            </div>
        }
    }

    <div class="row mt-4">
        @if (pets == null || pets.Count == 0)
        {
            <p class="text-center" style="color: #92B1B6;">🐾 No pets available for adoption at the moment. Check back soon! 🐾</p>
        }
        else
        {
            @foreach (var pet in pets)
            {
                <div class="col-md-4 col-lg-3 mb-4">
                    <div class="card shadow-lg rounded overflow-hidden pet-card" style="background-color: #FFEFDB;">
                        <img src="@pet.ImageUrl" alt="@pet.Name" class="card-img-top" style="height: 250px; object-fit: cover;"
                             onerror="this.onerror=null;this.src='Image/petPlaceholder.png';">
                        <div class="card-body text-center">
                            <h4 class="card-title" style="color: #35455D;">@pet.Name</h4>
                            <p style="color: #35455D;"><strong>ID:</strong> @pet.Id</p> <!-- Pet ID is now displayed but auto-generated -->
                            <p style="color: #35455D;">Breed: @pet.Breeed | Age: @pet.Age years</p>
                            <p class="card-text text-truncate" style="color: #35455D;">@pet.Description</p>

                            @if (!isAdmin)
                            {
                                <NavLink href="/adoptionapplicationpage" class="btn rounded-pill w-100" style="background-color: #92B1B6; color: white;">Adopt</NavLink>
                            }

                            @if (isAdmin)
                            {
                                <button class="btn rounded-pill w-100 mt-2" style="background-color: #F1C5AE; color: #35455D;" @onclick="() => DeletePet(pet.Id)">Delete</button>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</section>

<footer class="footer py-4 text-center" style="background-color: #35455D; color: white;">
    <p>&copy; 2024 Pet Adoption Center. All rights reserved.</p>
    <nav>
        <a href="#" class="text-white mx-2 text-decoration-none">Privacy Policy</a> |
        <a href="#" class="text-white mx-2 text-decoration-none">Terms of Service</a>
    </nav>
</footer>

<style>
    .header {
        background: linear-gradient(to right, #F1C5AE, #92B1B6); /* Coral to teal gradient */
    }

    .pet-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .pet-card:hover {
            transform: scale(1.05);
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
        }

    .footer {
        background-color: #35455D;
    }
</style>

@code {
    private List<Pet> pets = new();
    private bool isAdmin = false;
    private bool showAddPetForm = false;
    private Pet newPet = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        pets = await context.Pet.ToListAsync();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAdmin = user.Identity?.IsAuthenticated == true && user.Identity.Name == "admin@localhost.com";
    }

    private void ShowAddPetForm()
    {
        showAddPetForm = true;
    }

    private void HideAddPetForm()
    {
        showAddPetForm = false;
        newPet = new();
    }

    private async Task AddPet()
    {
        using var context = await DbFactory.CreateDbContextAsync();

        newPet.DateCreated = DateTime.Now;
        newPet.DateUpdated = DateTime.Now;
        newPet.CreatedBy = "Admin";
        newPet.UpdatedBy = "Admin";

        context.Pet.Add(newPet);
        await context.SaveChangesAsync();

        pets = await context.Pet.ToListAsync();
        showAddPetForm = false;
        newPet = new();
    }

    private async Task DeletePet(int petId)
    {
        bool confirmDelete = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this pet?");
        if (!confirmDelete) return;

        using var context = await DbFactory.CreateDbContextAsync();
        var petToDelete = await context.Pet.FindAsync(petId);

        if (petToDelete != null)
        {
            context.Pet.Remove(petToDelete);
            await context.SaveChangesAsync();
            pets = await context.Pet.ToListAsync();
        }
    }
}
